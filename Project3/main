#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <RTClib.h>
#include <ArduinoFFT.h>

// Define pins
#define MOTOR_PIN1 9 // Motor control pin 1
#define MOTOR_PIN2 10 // Motor control pin 2
#define MOTOR_ENABLE_PIN 8 // Motor enable pin on L293D
#define SOUND_SENSOR_PIN A0
#define BUTTON_PIN 2 // Example button pin, change as needed

// Motor speed levels
#define FULL_SPEED 255
#define THREE_QUARTER_SPEED 192
#define HALF_SPEED 128
#define STOPPED 0

// Initialize libraries
RTC_DS1307 rtc;
LiquidCrystal_I2C lcd(0x27, 16, 2);
ArduinoFFT FFT = ArduinoFFT();

// Global variables
volatile bool fanRunning = false;
volatile int fanSpeed = STOPPED;

void setup() {
  // Initialize serial communication for debugging
  Serial.begin(9600);

  // Set up DC motor
  pinMode(MOTOR_PIN1, OUTPUT);
  pinMode(MOTOR_PIN2, OUTPUT);
  pinMode(MOTOR_ENABLE_PIN, OUTPUT);
  stopFan(); // Ensure the fan starts in a stopped state

  // Set up LCD display
  lcd.begin(16, 2);
  lcd.print("Initializing...");

  // Set up RTC
  Wire.begin();
  if (!rtc.begin()) {
    Serial.println("Couldn't find RTC");
    while (1);
  }

  if (rtc.lostPower()) {
    Serial.println("RTC lost power, let's set the time!");
    rtc.adjust(DateTime(F(__DATE__), F(__TIME__)));
  }

  // Set up button
  pinMode(BUTTON_PIN, INPUT_PULLUP);

  // Set up timer interrupt
  attachInterrupt(digitalPinToInterrupt(BUTTON_PIN), updateInfoISR, RISING);

  // Other setup tasks...
}

void loop() {
  // Main loop tasks...
  // You can add other tasks here, if needed
}

void updateInfoISR() {
  // Code to update information (clock, rpm, direction) every second
  DateTime now = rtc.now();

  // Display the time on the LCD
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Time: ");
  lcd.print(now.hour(), DEC);
  lcd.print(':');
  lcd.print(now.minute(), DEC);
  lcd.print(':');
  lcd.print(now.second(), DEC);

  // Code to handle sound detection and adjust fan speed
  // Implement sound sensor logic and FFT processing here

  // Example: if (detectedNote == "C4")
  // Increase fan speed
  increaseFanSpeed();

  // Example: if (detectedNote == "A4")
  // Decrease fan speed
  decreaseFanSpeed();
}

// Function to stop the fan
void stopFan() {
  analogWrite(MOTOR_PIN1, 0);
  analogWrite(MOTOR_PIN2, 0);
}

// Function to increase fan speed
void increaseFanSpeed() {
  if (fanSpeed < 3) {
    fanSpeed++;
    updateMotorSpeed();
  }
}

// Function to decrease fan speed
void decreaseFanSpeed() {
  if (fanSpeed > 0) {
    fanSpeed--;
    updateMotorSpeed();
  }
}

// Function to update motor speed based on fanSpeed variable
void updateMotorSpeed() {
  switch (fanSpeed) {
    case 0:
      stopFan();
      break;
    case 1:
      analogWrite(MOTOR_PIN1, HALF_SPEED);
      analogWrite(MOTOR_PIN2, 0);
      break;
    case 2:
      analogWrite(MOTOR_PIN1, FULL_SPEED);
      analogWrite(MOTOR_PIN2, 0);
      break;
    case 3:
      analogWrite(MOTOR_PIN1, FULL_SPEED);
      analogWrite(MOTOR_PIN2, HALF_SPEED);
      break;
  }
}
