#include <Wire.h>

#define X_pin A11
#define Y_pin A10

// Joystick pins
const int SW_pin = 2;   // Digital pin connected to the joystick switch output

const int buzzerPin = 9;

bool appleEaten = false;

// MPU-6050 variables
const int MPU_addr = 0x68;  // I2C address of the MPU-6050
int16_t AcX, AcY, GyX, GyY;
int joystickX = 0;
int joystickY = 0;

void setup() {
  Wire.begin();  // Initialize I2C communication
  Wire.beginTransmission(MPU_addr);
  Wire.write(0x6B);  // PWR_MGMT_1 register
  Wire.write(0);     // Set to zero (wakes up the MPU-6050)
  Wire.endTransmission(true);
  Serial.begin(9600);
  pinMode(LED_BUILTIN, OUTPUT);     // Initialize built-in LED pin
  digitalWrite(LED_BUILTIN, HIGH);  // Turn the LED on (HIGH is the voltage level)
  pinMode(buzzerPin, OUTPUT);
  pinMode(SW_pin, OUTPUT);
}

void loop() {
  // Read from the joystick:
  joystickX = analogRead(X_pin);
  joystickY = analogRead(Y_pin);
  int joystickSwitch = digitalRead(SW_pin);

  int control = 1;

  if(joystickSwitch == HIGH){
    control = 1 - control;
  }

  // Read from the MPU-6050 sensor:
  Wire.beginTransmission(MPU_addr);
  Wire.write(0x3B);  // Starting with register 0x43 (GYRO_XOUT_H)
  Wire.endTransmission(false);
  Wire.requestFrom(MPU_addr, 4, true);  // Request 2 registers
  AcX = Wire.read() << 8 | Wire.read();  // 0x3B (ACCEL_XOUT_H) & 0x3C (ACCEL_XOUT_L)    
  AcY = Wire.read() << 8 | Wire.read();  // 0x3D (ACCEL_YOUT_H) & 0x3E (ACCEL_YOUT_L)
  GyX = Wire.read() << 8 | Wire.read();  // 0x43
  GyY = Wire.read() << 8 | Wire.read();  // 0x45

  // Use joystick or MPU-6050 to control the Snake's movement
  if (control == 0) {  // Joystick switch is pressed
    // Handle joystick input to control the Snake's direction
    if (joystickX < 200) {
      // Handle left movement
      Serial.write("a");
    } if (joystickX > 800) {
      // Handle right movement
      Serial.write("d");
    } if (joystickY < 200) {
      // Handle up movement
      Serial.write("w");
    } if (joystickY > 800) {
      // Handle down movement
      Serial.write("s");

    }

  } else {
    // Handle MPU-6050 input to control the Snake's direction
    if (AcY > 1000 || AcX > 1000){
      Serial.write(" Movement Detected ");
    if (GyX > 1000) {
      Serial.write("a");
    } 
    if (GyX < -1000) {
      Serial.write("d");
    }
    if (GyY < 1000) {
      Serial.write("w");
    }
    if (GyY < -1000) {
      Serial.write("s");
    }
 }
}

  delay(100);

  if (Serial.available()) {
    // Read the incoming character
    char incomingChar = Serial.read();

    // Check if the incoming character is 'E'
    if (incomingChar == 'E') {
      // Set the flag to indicate an apple is eaten
      appleEaten = true;
    }
  }
  // Check if the snake ate an apple
  if (appleEaten) {
    digitalWrite(buzzerPin, HIGH);
    delay(100);
    digitalWrite(buzzerPin, LOW);
  }
  
  appleEaten = false;
}
